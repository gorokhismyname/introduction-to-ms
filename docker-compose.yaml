services:
  resource-postgres:
    image: postgres:17-alpine
    container_name: resource-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_RESOURCE}
    ports:
      - "${RESOURCE_DB_PORT_EXT}:5432"
    volumes:
      - ./init-scripts/resource-db:/docker-entrypoint-initdb.d

  song-postgres:
    image: postgres:17-alpine
    container_name: song-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_SONG}
    ports:
      - "${SONG_DB_PORT_EXT}:5432"
    volumes:
      - ./init-scripts/song-db:/docker-entrypoint-initdb.d

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    environment:
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: false
      EUREKA_CLIENT_FETCH_REGISTRY: false
    ports:
      - "${EUREKA_SERVER_PORT}:8761"

  resource-app:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    container_name: resource-app
    environment:
      DB_HOST: ${RESOURCE_DB_HOST}
      DB_PORT: ${RESOURCE_DB_PORT}
      DB_NAME: ${RESOURCE_DB_NAME}
      DB_USER: ${RESOURCE_DB_USER}
      DB_PASSWORD: ${RESOURCE_DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    ports:
      - "${RESOURCE_APP_PORT}:8081"
    depends_on:
      - resource-postgres
      - eureka-server

  song-app:
    build:
      context: ./song-service
      dockerfile: Dockerfile
    container_name: song-app
    environment:
      DB_HOST: ${SONG_DB_HOST}
      DB_PORT: ${SONG_DB_PORT}
      DB_NAME: ${SONG_DB_NAME}
      DB_USER: ${SONG_DB_USER}
      DB_PASSWORD: ${SONG_DB_PASSWORD}
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
    ports:
      - "${SONG_APP_PORT}:8082"
    depends_on:
      - song-postgres
      - eureka-server
